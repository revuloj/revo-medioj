version: '3.3'

# Uzata kun komando docker-compose sur la servilo
# Ĉar ĝi estas virtuala servilo, pro aparta limigo ĉe nia retprovizanto
# funkcias nek k3d nek docker stack tie...:
#
# docker-compose -f docker-compose-srv.yml up



services:
  cetonio:
    image: ghcr.io/revuloj/voko-cetonio/voko-cetonio:${VER}
    build: https://github.com/revuloj/voko-cetonio.git
    restart: always
    # ni ne uzas "always" ĉar la testan servon ni volas haltigi ankaŭ trans relanĉoj de la demono/sistemo
    # alternative necesus flegi du diversajn kompon-dosierojn
    # restart: always
    # ni devos atendi, ĝis cetonio-db akiris la datumbazon,
    # jen estas informoj, kiel prokrasti la lanĉon: https://docs.docker.com/compose/startup-order/

    depends_on:
      - cikado
      - akrido
      - grilo
        #command: bash -c 'cd pro && swipl -s redaktilo-servo.pl -g redaktilo_servo:daemon -t halt -p agordo=etc -- --workers=10 --port=8080 --no-fork'
    # cetonio estu en la reto de la gastiganto por povi kontakti la poŝtservon:
    network_mode: "host"
    # ĉar cetonio estas nun en la reto de gastiganto, ni bezonas informi ĝin
    # kiel atingi la subservojn:
    extra_hosts:
      cikado: "127.0.0.1"
      akrido: "127.0.0.1"
      grilo: "127.0.0.1"

    #ports:
      # ĉe IPv6 por havi la retpordon ne nur ĉe 0.0.0.0:8080, sed ankaŭ localhost:8080
      # uzu provizore:
      #   sysctl -w net.ipv4.ip_forward=1 
      # aŭ por havi tion konstante, aldonu en /etc/sysctl.conf
      #   net.ipv4.ip_forward = 1 
      # anakŭ vi povas aldoni en la gastiganto /etc/hosts
      #   127.0.0.1  example.com
      #- ${CETONIO_PORT:-8080}:8080
    environment:
      # ni bezonas reton de la gastiganto (host),
      # tial la servo mem devas malfermi la publikan retpordon
      # ni sendas ĝin tra medivariablo (vd. voko-cetonio/Dockerfile:CMD)
      - CETONIO_PORT=${CETONIO_PORT:-8080}
      # permesu ŝangi subservajn retpodojn en .env
      # kaj transdonu tiujn al Cetonio
      - GRILO_PORT
      - AKRIDO_PORT
      - CIKADO_PORT
      - CGI_USER
      - CGI_PWD
      # vi povas doni retpoŝtadreson de unuopa registrita redaktanto (vi)
      # se vi volas redakti nur loke sola. Donu mediovariablon antaŭ
      # lanĉi REDAKTANTO_RETPOSHTO='via@retadreso.org' ./cetoniujo-deploy.sh
      #- REDAKTANTO_RETPOSHTO

      # por ensaluto k.a. la redaktilo bezonas scii la URL-on
      # elekstera, ekz-e https:://revaj.steloj.de/redaktilo
      # aŭ http://example.com:8080/, http://localhost:8080/redaktilo-test
      - REDAKTILO_URL=${REDAKTILO_URL:-http://localhost:8080/redaktilo}
      # kien ni submetu redaktojn (revo-fonto aŭ revo-fonto-testo)
      - GITHUB_REPO=revo-fonto
    volumes:
      # ŝanĝita: ni nun uzas secrets anstatŭ bind 
      #- type: bind
      #  source: $HOME/etc
      #  target: /home/cetonio/etc
      #  read_only: true
      - type: bind
        source: ${ETC_DIR}/redaktilo.skr
        target: /run/secrets/voko-cetonio.sekret-agordo
        read_only: true
      - type: bind
        source: ${SQL_DIR}
        target: /home/cetonio/sql
        #read_only: false
        #volume:
        #  nocopy: true

# Aktualigon ni prefere faros per crontab, se ni uzas
# docker-compose, i.a. ĉar tiu ne subtenas tiajn efemerajn taskojn per restart_policy...
#  cetonio-db:
#    image: ghcr.io/revuloj/voko-cetonio/voko-cetonio:latest
#    build: https://github.com/revuloj/voko-cetonio.git
#    command: ./bin/instalo.sh update-db
#    deploy:
#      # aktualigu la datumbazon ĉiutage (kvankam en Revo ĝi momente estas malpli ofte renovigita)
#      restart_policy:
#        delay: 24h
#    volumes:
#      - type: volume
#        source: sql
#        target: /home/cetonio/sql
#        #read_only: false
#        #volume:
#        #  nocopy: true

  # servo por citaĵo-serĉo
  cikado:
    image: ghcr.io/revuloj/voko-cikado/voko-cikado:${VER}
    build: https://github.com/revuloj/voko-cikado.git
    restart: always
    ports:
      - "127.0.0.1:${CIKADO_PORT:-8082}:8082"
    volumes:
      - type: bind
        source: ./ekstraj
        target: /home/cikado/ekstraj      

  # servo por vortanalizo
  akrido:
    image: ghcr.io/revuloj/voko-akrido/voko-akrido:${VER}
    build: https://github.com/revuloj/voko-akrido.git
    restart: always
    ports:
      - "127.0.0.1:${AKRIDO_PORT:-8081}:8081"

  # servo por sintakskontrolo per RelaxNG (Jing)
  grilo:
    image: ghcr.io/revuloj/voko-grilo/voko-grilo:${VER}
    build: https://github.com/revuloj/voko-grilo.git
    restart: always
    ports:
      - "127.0.0.1:${GRILO_PORT:-8787}:8787"

#  retpoŝtservilo, necesas nur se pluraj uzantoj uzas la redaktilon samtempe
#  tomocero:
#    image: voko-tomocero
#    build: https://github.com/revuloj/voko-tomocero.git

# en ~/etc/ estu dosieroj redaktilo.cfg kaj redaktantoj
# 1) la unuan oni povas kopii de cfg/redaktilo.cfg kaj agordi
# aldonante vian retpoŝtan konton. Por uzi Google-saluton vi
# bezonas registri vian propran ŝlosilon kun via retnomo (domajno)
# krome adaptu la posedanton al cetonio:
#   chown 1088 ~/etc/redaktilo.cfg
# 2) la dua (redaktantoj) estas listo de redaktanto-nomoj kaj retadresoj
# normale ni ricevos ĝin el la centra mysql-datumbazo poer aparta
# elŝuto-skripto, sed vi povas anstataŭe meti nur linion
#
# Via Nomo <via@retadre.so> <via@dua.retadre.so>

#volumes:
#  sql:


